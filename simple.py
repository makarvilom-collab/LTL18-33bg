from flask import Flask, request, jsonify
import requests
import json

app = Flask(__name__)

BOT_TOKEN = "8405053839:AAENp9xuJw2HVwF1FWs8Dipwkrur1dqK2Uw"

@app.route('/')
def home():
    return '''
    <!DOCTYPE html>
    <html>
    <head>
        <title>BEATSSUDA Platform</title>
        <meta charset="utf-8">
        <style>
            body { font-family: Inter, sans-serif; background: #0a0a0a; color: white; text-align: center; padding: 50px; }
            h1 { color: #ff6b35; }
            .btn { background: #ff6b35; color: white; padding: 15px 30px; border: none; border-radius: 8px; text-decoration: none; display: inline-block; margin: 10px; }
        </style>
    </head>
    <body>
        <h1>üéµ LTL18:33BG - BEATSSUDA Platform</h1>
        <p>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º! –ú—ã - –∫–æ–º—å—é–Ω–∏—Ç–∏ –±–∏—Ç–º–µ–π–∫–µ—Ä–æ–≤ –∏ –ø—Ä–æ–¥—é—Å–µ—Ä–æ–≤.</p>
        <p>–ü–æ–º–æ–≥–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥—É, –¥–µ–ª–∞–µ–º –∑–≤—É–∫,<br>–ø—Ä–æ–¥–∞—ë–º / –ø–æ–∫—É–ø–∞–µ–º / –¥–µ–ª–∏–º—Å—è –∫–∏—Ç–∞–º–∏ –∏ –ø—Ä–µ—Å–µ—Ç–∞–º–∏.</p>
        <p>üî• –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–∏—Ç—ã, –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∏–Ω–≥ –∏ –æ—Å—Ç–∞–ª—å–Ω–æ–µ</p>
        <a href="/health" class="btn">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å</a>
        <br><br>
        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Vercel!</p>
    </body>
    </html>
    '''

@app.route('/health')
def health():
    return {"status": "ok", "platform": "BEATSSUDA", "host": "vercel"}

@app.route('/webhook/<token>', methods=['POST'])
def webhook(token):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞ –æ—Ç Telegram"""
    if token != BOT_TOKEN:
        return "Unauthorized", 403
    
    try:
        update = request.get_json()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if 'message' in update:
            message = update['message']
            chat_id = message['chat']['id']
            text = message.get('text', '')
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
            if text == '/start':
                send_start_message(chat_id)
            elif text == '/app':
                send_app_message(chat_id)
            elif text == '/help':
                send_help_message(chat_id)
        
        return "OK", 200
        
    except Exception as e:
        print(f"Webhook error: {e}")
        return "Error", 500

def send_start_message(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    message = """üéµ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ LTL18:33BG \- BEATSSUDA Platform*

–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º\\! –ú—ã \- –∫–æ–º—å—é–Ω–∏—Ç–∏ –±–∏—Ç–º–µ–π–∫–µ—Ä–æ–≤ –∏ –ø—Ä–æ–¥—é—Å–µ—Ä–æ–≤\\.
–ü–æ–º–æ–≥–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥—É, –¥–µ–ª–∞–µ–º –∑–≤—É–∫,
–ø—Ä–æ–¥–∞—ë–º / –ø–æ–∫—É–ø–∞–µ–º / –¥–µ–ª–∏–º—Å—è –∫–∏—Ç–∞–º–∏ –∏ –ø—Ä–µ—Å–µ—Ç–∞–º–∏\\.

üî• *–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:*
‚Ä¢ –ü–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–∏—Ç—ã
‚Ä¢ –ó–∞–∫–∞–∑—ã–≤–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∏–Ω–≥ –∏ —Å–≤–µ–¥–µ–Ω–∏–µ  
‚Ä¢ –î–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º —Å –∫–æ–º—å—é–Ω–∏—Ç–∏
‚Ä¢ –ù–∞—Ö–æ–¥–∏—Ç—å –Ω—É–∂–Ω—ã–µ –∫–∏—Ç—ã –∏ –ø—Ä–µ—Å–µ—Ç—ã

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É:"""
    
    keyboard = {
        "inline_keyboard": [[
            {
                "text": "üöÄ –û—Ç–∫—Ä—ã—Ç—å BEATSSUDA Platform",
                "web_app": {"url": "https://ltl-18-33bg.vercel.app"}
            }
        ]]
    }
    
    send_telegram_message(chat_id, message, keyboard)

def send_app_message(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    message = "üöÄ *–û—Ç–∫—Ä–æ–π—Ç–µ BEATSSUDA Platform*"
    
    keyboard = {
        "inline_keyboard": [[
            {
                "text": "üì± –û—Ç–∫—Ä—ã—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É",
                "web_app": {"url": "https://ltl-18-33bg.vercel.app"}
            }
        ]]
    }
    
    send_telegram_message(chat_id, message, keyboard)

def send_help_message(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    message = """‚ùì *–ü–æ–º–æ—â—å –ø–æ BEATSSUDA Platform*

*–ö–æ–º–∞–Ω–¥—ã:*
/start \- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/app \- –û—Ç–∫—Ä—ã—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
/help \- –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:*
1\\. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /app
2\\. –û—Ç–∫—Ä–æ–µ—Ç—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤ Telegram
3\\. –ü–æ–∫—É–ø–∞–π—Ç–µ, –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ, –æ–±—â–∞–π—Ç–µ—Å—å\\!

*–ü–æ–¥–¥–µ—Ä–∂–∫–∞:* @ltl1833bg\_bot"""
    
    send_telegram_message(chat_id, message)

def send_telegram_message(chat_id, text, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Bot API"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    
    data = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "MarkdownV2"
    }
    
    if reply_markup:
        data["reply_markup"] = reply_markup
    
    try:
        response = requests.post(url, json=data)
        return response.status_code == 200
    except Exception as e:
        print(f"Error sending message: {e}")
        return False

if __name__ == '__main__':
    app.run(debug=True)