from flask import Flask, request, jsonify
import requests
import json

app = Flask(__name__)

BOT_TOKEN = "8405053839:AAENp9xuJw2HVwF1FWs8Dipwkrur1dqK2Uw"

@app.route('/')
def home():
    return '''
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LTL18:33bg - BEATSSUDA</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Inter', sans-serif; background: #0a0a0a; color: #ffffff; line-height: 1.6; }
        .container { max-width: 1200px; margin: 0 auto; padding: 0 20px; }
        
        header { background: rgba(0,0,0,0.95); padding: 1rem 0; position: fixed; width: 100%; top: 0; z-index: 1000; backdrop-filter: blur(10px); }
        nav { display: flex; justify-content: space-between; align-items: center; }
        .logo { font-size: 1.5rem; font-weight: 700; color: #ff6b35; }
        .nav-links { display: flex; list-style: none; gap: 2rem; }
        .nav-links a { color: #ffffff; text-decoration: none; font-weight: 500; transition: color 0.3s; }
        .nav-links a:hover { color: #ff6b35; }
        
        main { margin-top: 80px; }
        .hero { text-align: center; padding: 4rem 0; background: linear-gradient(135deg, #1a0a0a 0%, #2a1a1a 100%); }
        .hero h1 { font-size: 3rem; font-weight: 700; margin-bottom: 1rem; background: linear-gradient(135deg, #ff6b35, #ff8c42); -webkit-background-clip: text; -webkit-text-fill-color: transparent; }
        .hero p { font-size: 1.2rem; color: #cccccc; margin-bottom: 2rem; max-width: 600px; margin-left: auto; margin-right: auto; }
        
        .features { padding: 4rem 0; }
        .features-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem; margin-top: 2rem; }
        .feature-card { background: rgba(255,255,255,0.05); padding: 2rem; border-radius: 12px; border: 1px solid rgba(255,255,255,0.1); }
        .feature-card h3 { color: #ff6b35; margin-bottom: 1rem; }
        
        .cta { background: #ff6b35; color: white; padding: 15px 30px; border: none; border-radius: 8px; font-size: 1.1rem; font-weight: 600; cursor: pointer; text-decoration: none; display: inline-block; margin: 10px; transition: background 0.3s; }
        .cta:hover { background: #e55a2b; }
        
        .stats { background: rgba(255,107,53,0.05); padding: 3rem 0; text-align: center; }
        .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 2rem; }
        .stat h3 { font-size: 2rem; color: #ff6b35; }
        
        footer { background: #000000; padding: 2rem 0; text-align: center; margin-top: 4rem; }
        .support { color: #ff6b35; font-weight: 600; }
        
        @media (max-width: 768px) {
            .hero h1 { font-size: 2rem; }
            .nav-links { display: none; }
        }
    </style>
</head>
<body>
    <header>
        <nav class="container">
            <div class="logo">üéµ BEATSSUDA</div>
            <ul class="nav-links">
                <li><a href="#home">–ì–ª–∞–≤–Ω–∞—è</a></li>
                <li><a href="#beats">–ë–∏—Ç—ã</a></li>
                <li><a href="#services">–£—Å–ª—É–≥–∏</a></li>
                <li><a href="#community">–ö–æ–º—å—é–Ω–∏—Ç–∏</a></li>
            </ul>
        </nav>
    </header>

    <main>
        <section class="hero" id="home">
            <div class="container">
                <h1>LTL18:33BG - BEATSSUDA Platform</h1>
                <p>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º! –ú—ã - –∫–æ–º—å—é–Ω–∏—Ç–∏ –±–∏—Ç–º–µ–π–∫–µ—Ä–æ–≤ –∏ –ø—Ä–æ–¥—é—Å–µ—Ä–æ–≤.<br>
                –ü–æ–º–æ–≥–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥—É, –¥–µ–ª–∞–µ–º –∑–≤—É–∫, –ø—Ä–æ–¥–∞—ë–º / –ø–æ–∫—É–ø–∞–µ–º / –¥–µ–ª–∏–º—Å—è –∫–∏—Ç–∞–º–∏ –∏ –ø—Ä–µ—Å–µ—Ç–∞–º–∏.</p>
                <a href="https://t.me/ltl1833bg_bot" class="cta">üöÄ –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram</a>
                <a href="#features" class="cta">ÔøΩ –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ</a>
            </div>
        </section>

        <section class="features" id="features">
            <div class="container">
                <h2 style="text-align: center; margin-bottom: 1rem; color: #ff6b35;">ÔøΩüî• –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:</h2>
                <div class="features-grid">
                    <div class="feature-card">
                        <h3>üéµ –ü–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–∏—Ç—ã</h3>
                        <p>–†–∞–∑–º–µ—â–∞–π—Ç–µ —Å–≤–æ–∏ —Ç—Ä–µ–∫–∏ –∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω—ã–µ –±–∏—Ç—ã –¥–ª—è –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</p>
                    </div>
                    <div class="feature-card">
                        <h3>üéöÔ∏è –ó–∞–∫–∞–∑—ã–≤–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∏–Ω–≥ –∏ —Å–≤–µ–¥–µ–Ω–∏–µ</h3>
                        <p>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–≤—É–∫–∞ –æ—Ç –æ–ø—ã—Ç–Ω—ã—Ö –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤</p>
                    </div>
                    <div class="feature-card">
                        <h3>ü§ù –î–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º —Å –∫–æ–º—å—é–Ω–∏—Ç–∏</h3>
                        <p>–û–±—â–∞–π—Ç–µ—Å—å —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏, –¥–µ–ª–∏—Ç–µ—Å—å —Å–æ–≤–µ—Ç–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —Ñ–∏–¥–±–µ–∫</p>
                    </div>
                    <div class="feature-card">
                        <h3>üéπ –ù–∞—Ö–æ–¥–∏—Ç—å –∫–∏—Ç—ã –∏ –ø—Ä–µ—Å–µ—Ç—ã</h3>
                        <p>–û–≥—Ä–æ–º–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å—ç–º–ø–ª–æ–≤, –ª—É–ø–æ–≤ –∏ –ø—Ä–µ—Å–µ—Ç–æ–≤ –¥–ª—è –≤–∞—à–∏—Ö –±–∏—Ç–æ–≤</p>
                    </div>
                </div>
            </div>
        </section>

        <section class="stats">
            <div class="container">
                <h2 style="margin-bottom: 2rem; color: #ff6b35;">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</h2>
                <div class="stats-grid">
                    <div class="stat">
                        <h3>50+</h3>
                        <p>–ê–∫—Ç–∏–≤–Ω—ã—Ö –±–∏—Ç–º–µ–π–∫–µ—Ä–æ–≤</p>
                    </div>
                    <div class="stat">
                        <h3>200+</h3>
                        <p>–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –±–∏—Ç–æ–≤</p>
                    </div>
                    <div class="stat">
                        <h3>24/7</h3>
                        <p>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–º—å—é–Ω–∏—Ç–∏</p>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <footer>
        <div class="container">
            <p>¬© 2024 LTL18:33BG - BEATSSUDA Platform</p>
            <p>üî• –ú–∏–Ω–∏–º–∞–ª, —á–∏—Å—Ç–æ, –ø–æ —Å—É—Ç–∏</p>
            <p class="support">–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è: <strong>@BeatHavenX</strong></p>
            <p>–í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–∏—Å–∞—Ç—å –µ–º—É!</p>
        </div>
    </footer>
</body>
</html>
    '''

@app.route('/health')
def health():
    return {"status": "ok", "platform": "BEATSSUDA", "host": "vercel"}

@app.route('/webhook/<token>', methods=['POST'])
def webhook(token):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞ –æ—Ç Telegram"""
    if token != BOT_TOKEN:
        return "Unauthorized", 403
    
    try:
        update = request.get_json()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if 'message' in update:
            message = update['message']
            chat_id = message['chat']['id']
            text = message.get('text', '')
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
            if text == '/start':
                send_start_message(chat_id)
            elif text == '/app':
                send_app_message(chat_id)
            elif text == '/help':
                send_help_message(chat_id)
        
        return "OK", 200
        
    except Exception as e:
        print(f"Webhook error: {e}")
        return "Error", 500

def send_start_message(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    message = """üéµ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ LTL18:33BG \- BEATSSUDA Platform*

–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º\\! –ú—ã \- –∫–æ–º—å—é–Ω–∏—Ç–∏ –±–∏—Ç–º–µ–π–∫–µ—Ä–æ–≤ –∏ –ø—Ä–æ–¥—é—Å–µ—Ä–æ–≤\\.
–ü–æ–º–æ–≥–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥—É, –¥–µ–ª–∞–µ–º –∑–≤—É–∫,
–ø—Ä–æ–¥–∞—ë–º / –ø–æ–∫—É–ø–∞–µ–º / –¥–µ–ª–∏–º—Å—è –∫–∏—Ç–∞–º–∏ –∏ –ø—Ä–µ—Å–µ—Ç–∞–º–∏\\.

üî• *–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:*
‚Ä¢ –ü–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –±–∏—Ç—ã
‚Ä¢ –ó–∞–∫–∞–∑—ã–≤–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∏–Ω–≥ –∏ —Å–≤–µ–¥–µ–Ω–∏–µ  
‚Ä¢ –î–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º —Å –∫–æ–º—å—é–Ω–∏—Ç–∏
‚Ä¢ –ù–∞—Ö–æ–¥–∏—Ç—å –Ω—É–∂–Ω—ã–µ –∫–∏—Ç—ã –∏ –ø—Ä–µ—Å–µ—Ç—ã

*–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞:* @BeatHavenX

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É:"""
    
    keyboard = {
        "inline_keyboard": [[
            {
                "text": "üöÄ –û—Ç–∫—Ä—ã—Ç—å BEATSSUDA Platform",
                "web_app": {"url": "https://ltl-18-33bg.vercel.app"}
            }
        ]]
    }
    
    send_telegram_message(chat_id, message, keyboard)

def send_app_message(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    message = "üöÄ *–û—Ç–∫—Ä–æ–π—Ç–µ BEATSSUDA Platform*"
    
    keyboard = {
        "inline_keyboard": [[
            {
                "text": "üì± –û—Ç–∫—Ä—ã—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É",
                "web_app": {"url": "https://ltl-18-33bg.vercel.app"}
            }
        ]]
    }
    
    send_telegram_message(chat_id, message, keyboard)

def send_help_message(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    message = """‚ùì *–ü–æ–º–æ—â—å –ø–æ BEATSSUDA Platform*

*–ö–æ–º–∞–Ω–¥—ã:*
/start \- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/app \- –û—Ç–∫—Ä—ã—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
/help \- –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:*
1\\. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø—É –º–µ–Ω—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /app
2\\. –û—Ç–∫—Ä–æ–µ—Ç—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤ Telegram
3\\. –ü–æ–∫—É–ø–∞–π—Ç–µ, –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ, –æ–±—â–∞–π—Ç–µ—Å—å\\!

*–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è:* @BeatHavenX
*–í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–∏—Å–∞—Ç—å –µ–º—É\\!*"""
    
    send_telegram_message(chat_id, message)

def send_telegram_message(chat_id, text, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Bot API"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    
    data = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "MarkdownV2"
    }
    
    if reply_markup:
        data["reply_markup"] = reply_markup
    
    try:
        response = requests.post(url, json=data)
        return response.status_code == 200
    except Exception as e:
        print(f"Error sending message: {e}")
        return False

if __name__ == '__main__':
    app.run(debug=True)